var b = 6 ; 
fun f ( x , y ) = 
var a = x + y * 2 / 3 - 1 ; 
print ( a ) ; 
if 
x > 4 && ! ( ~ x <= 4 || b < 3 ) 
then 
return a * a ; 
elif 
1 
then 
return y & 2 << 1 + x ; 
else 
return y - 1 ; 
end 
end 
fun main ( ) = 
var x = 5 + 2 / - 2 * + 2 ; 
while 
x > 0 
do 
x = f ( x , ( x + 1 ) ) ; 
end 
x = input ( ) ; 
return 0 ; 
end 
main ( ) ; 
 

DEFSTATE: 0
STACK:
:

END

LINE: 1
TOKEN: var
DEFSTATE: 1
STACK:
:

:
var  = ;

END

LINE: 1
TOKEN: b
DEFSTATE: 5
STACK:
:

:
var b = ;

END

LINE: 1
TOKEN: =
DEFSTATE: 0
STACK:
:

:
var b = ;

END

LINE: 1
TOKEN: 6
DEFSTATE: 0
STACK:
:

:
var b = ;

:
6
END

LINE: 1
TOKEN: ;
var b = 6;
DEFSTATE: 0
STACK:
:

:
var b = 6;

END

LINE: 3
TOKEN: fun
DEFSTATE: 1
STACK:
:

:
var b = 6;

:
fun () =
end

END

LINE: 3
TOKEN: f
DEFSTATE: 2
STACK:
:

:
var b = 6;

:
fun f() =
end

END

LINE: 3
TOKEN: (
DEFSTATE: 3
STACK:
:

:
var b = 6;

:
fun f() =
end

END

LINE: 3
TOKEN: x
DEFSTATE: 4
STACK:
:

:
var b = 6;

:
fun f(x) =
end

END

LINE: 3
TOKEN: ,
DEFSTATE: 3
STACK:
:

:
var b = 6;

:
fun f(x) =
end

END

LINE: 3
TOKEN: y
DEFSTATE: 4
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

END

LINE: 3
TOKEN: )
DEFSTATE: 5
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

END

LINE: 3
TOKEN: =
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

END

LINE: 4
TOKEN: var
DEFSTATE: 1
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var  = ;

END

LINE: 4
TOKEN: a
DEFSTATE: 5
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ;

END

LINE: 4
TOKEN: =
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ;

END

LINE: 4
TOKEN: x
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ;

:
x
END

LINE: 4
TOKEN: +
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ;

:
(x + )
END

LINE: 4
TOKEN: y
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ;

:
(x + )
:
y
END

LINE: 4
TOKEN: *
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ;

:
(x + )
:
(y * )
END

LINE: 4
TOKEN: 2
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ;

:
(x + )
:
(y * )
:
2
END

LINE: 4
TOKEN: /
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ;

:
(x + )
:
((y * 2) / )
END

LINE: 4
TOKEN: 3
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ;

:
(x + )
:
((y * 2) / )
:
3
END

LINE: 4
TOKEN: -
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ;

:
((x + ((y * 2) / 3)) - )
END

LINE: 4
TOKEN: 1
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ;

:
((x + ((y * 2) / 3)) - )
:
1
END

LINE: 4
TOKEN: ;
var a = ((x + ((y * 2) / 3)) - 1);
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

END

LINE: 5
TOKEN: print
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print
END

LINE: 5
TOKEN: (
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print()
END

LINE: 5
TOKEN: a
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print()
:
a
END

LINE: 5
TOKEN: )
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a)
END

LINE: 5
TOKEN: ;
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

END

LINE: 6
TOKEN: if
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

END

LINE: 7
TOKEN: x
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
x
END

LINE: 7
TOKEN: >
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
(x > )
END

LINE: 7
TOKEN: 4
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
(x > )
:
4
END

LINE: 7
TOKEN: &&
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
((x > 4) && )
END

LINE: 7
TOKEN: !
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
((x > 4) && )
:
!
END

LINE: 7
TOKEN: (
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
((x > 4) && )
:
!
:
()
END

LINE: 7
TOKEN: ~
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
((x > 4) && )
:
!
:
()
:
~
END

LINE: 7
TOKEN: x
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
((x > 4) && )
:
!
:
()
:
~
:
x
END

LINE: 7
TOKEN: <=
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
((x > 4) && )
:
!
:
()
:
(~x <= )
END

LINE: 7
TOKEN: 4
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
((x > 4) && )
:
!
:
()
:
(~x <= )
:
4
END

LINE: 7
TOKEN: ||
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
((x > 4) && )
:
!
:
()
:
((~x <= 4) || )
END

LINE: 7
TOKEN: b
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
((x > 4) && )
:
!
:
()
:
((~x <= 4) || )
:
b
END

LINE: 7
TOKEN: <
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
((x > 4) && )
:
!
:
()
:
((~x <= 4) || )
:
(b < )
END

LINE: 7
TOKEN: 3
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
((x > 4) && )
:
!
:
()
:
((~x <= 4) || )
:
(b < )
:
3
END

LINE: 7
TOKEN: )
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  
then
else
end

:
((x > 4) && )
:
!
:
((~x <= 4) || (b < 3))
END

LINE: 8
TOKEN: then
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
else
end

END

LINE: 9
TOKEN: return
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
else
end

:
return ;

END

LINE: 9
TOKEN: a
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
else
end

:
return ;

:
a
END

LINE: 9
TOKEN: *
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
else
end

:
return ;

:
(a * )
END

LINE: 9
TOKEN: a
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
else
end

:
return ;

:
(a * )
:
a
END

LINE: 9
TOKEN: ;
return (a * a);
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
else
end

:
return (a * a);

END

LINE: 10
TOKEN: elif
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  
then
else
end

END

LINE: 11
TOKEN: 1
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  
then
else
end

:
1
END

LINE: 12
TOKEN: then
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
else
end

END

LINE: 13
TOKEN: return
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
else
end

:
return ;

END

LINE: 13
TOKEN: y
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
else
end

:
return ;

:
y
END

LINE: 13
TOKEN: &
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
else
end

:
return ;

:
(y & )
END

LINE: 13
TOKEN: 2
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
else
end

:
return ;

:
(y & )
:
2
END

LINE: 13
TOKEN: <<
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
else
end

:
return ;

:
(y & )
:
(2 << )
END

LINE: 13
TOKEN: 1
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
else
end

:
return ;

:
(y & )
:
(2 << )
:
1
END

LINE: 13
TOKEN: +
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
else
end

:
return ;

:
(y & )
:
(2 << )
:
(1 + )
END

LINE: 13
TOKEN: x
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
else
end

:
return ;

:
(y & )
:
(2 << )
:
(1 + )
:
x
END

LINE: 13
TOKEN: ;
return (y & (2 << (1 + x)));
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
else
end

:
return (y & (2 << (1 + x)));

END

LINE: 14
TOKEN: else
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
  return (y & (2 << (1 + x)));
else
end

END

LINE: 15
TOKEN: return
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
  return (y & (2 << (1 + x)));
else
end

:
return ;

END

LINE: 15
TOKEN: y
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
  return (y & (2 << (1 + x)));
else
end

:
return ;

:
y
END

LINE: 15
TOKEN: -
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
  return (y & (2 << (1 + x)));
else
end

:
return ;

:
(y - )
END

LINE: 15
TOKEN: 1
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
  return (y & (2 << (1 + x)));
else
end

:
return ;

:
(y - )
:
1
END

LINE: 15
TOKEN: ;
return (y - 1);
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
  return (y & (2 << (1 + x)));
else
end

:
return (y - 1);

END

LINE: 16
TOKEN: end
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
end

:
var a = ((x + ((y * 2) / 3)) - 1);

:
print(a);

:
if
  ((x > 4) && !((~x <= 4) || (b < 3)))
then
  return (a * a);
elif
  1
then
  return (y & (2 << (1 + x)));
else
  return (y - 1);
end

END

LINE: 17
TOKEN: end
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

END

LINE: 19
TOKEN: fun
DEFSTATE: 1
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun () =
end

END

LINE: 19
TOKEN: main
DEFSTATE: 2
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

END

LINE: 19
TOKEN: (
DEFSTATE: 3
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

END

LINE: 19
TOKEN: )
DEFSTATE: 5
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

END

LINE: 19
TOKEN: =
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

END

LINE: 20
TOKEN: var
DEFSTATE: 1
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var  = ;

END

LINE: 20
TOKEN: x
DEFSTATE: 5
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = ;

END

LINE: 20
TOKEN: =
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = ;

END

LINE: 20
TOKEN: 5
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = ;

:
5
END

LINE: 20
TOKEN: +
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = ;

:
(5 + )
END

LINE: 20
TOKEN: 2
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = ;

:
(5 + )
:
2
END

LINE: 20
TOKEN: /
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = ;

:
(5 + )
:
(2 / )
END

LINE: 20
TOKEN: -
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = ;

:
(5 + )
:
(2 / )
:
-
END

LINE: 20
TOKEN: 2
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = ;

:
(5 + )
:
(2 / )
:
-
:
2
END

LINE: 20
TOKEN: *
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = ;

:
(5 + )
:
((2 / -2) * )
END

LINE: 20
TOKEN: +
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = ;

:
(5 + )
:
((2 / -2) * )
:
+
END

LINE: 20
TOKEN: 2
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = ;

:
(5 + )
:
((2 / -2) * )
:
+
:
2
END

LINE: 20
TOKEN: ;
var x = (5 + ((2 / -2) * +2));
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

END

LINE: 21
TOKEN: while
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  
do
end

END

LINE: 22
TOKEN: x
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  
do
end

:
x
END

LINE: 22
TOKEN: >
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  
do
end

:
(x > )
END

LINE: 22
TOKEN: 0
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  
do
end

:
(x > )
:
0
END

LINE: 23
TOKEN: do
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
end

END

LINE: 24
TOKEN: x
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
end

:
x
END

LINE: 24
TOKEN: =
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
end

:
x = ;

END

LINE: 24
TOKEN: f
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
end

:
x = ;

:
f
END

LINE: 24
TOKEN: (
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
end

:
x = ;

:
f()
END

LINE: 24
TOKEN: x
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
end

:
x = ;

:
f()
:
x
END

LINE: 24
TOKEN: ,
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
end

:
x = ;

:
f(x)
END

LINE: 24
TOKEN: (
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
end

:
x = ;

:
f(x)
:
()
END

LINE: 24
TOKEN: x
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
end

:
x = ;

:
f(x)
:
()
:
x
END

LINE: 24
TOKEN: +
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
end

:
x = ;

:
f(x)
:
()
:
(x + )
END

LINE: 24
TOKEN: 1
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
end

:
x = ;

:
f(x)
:
()
:
(x + )
:
1
END

LINE: 24
TOKEN: )
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
end

:
x = ;

:
f(x)
:
(x + 1)
END

LINE: 24
TOKEN: )
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
end

:
x = ;

:
f(x, (x + 1))
END

LINE: 24
TOKEN: ;
x = f(x, (x + 1));
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
end

:
x = f(x, (x + 1));

END

LINE: 25
TOKEN: end
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
  x = f(x, (x + 1));
end

END

LINE: 26
TOKEN: x
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
  x = f(x, (x + 1));
end

:
x
END

LINE: 26
TOKEN: =
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
  x = f(x, (x + 1));
end

:
x = ;

END

LINE: 26
TOKEN: input
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
  x = f(x, (x + 1));
end

:
x = ;

:
input
END

LINE: 26
TOKEN: (
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
  x = f(x, (x + 1));
end

:
x = ;

:
input()
END

LINE: 26
TOKEN: )
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
  x = f(x, (x + 1));
end

:
x = ;

:
input()
END

LINE: 26
TOKEN: ;
x = input();
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
  x = f(x, (x + 1));
end

:
x = input();

END

LINE: 27
TOKEN: return
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
  x = f(x, (x + 1));
end

:
x = input();

:
return ;

END

LINE: 27
TOKEN: 0
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
  x = f(x, (x + 1));
end

:
x = input();

:
return ;

:
0
END

LINE: 27
TOKEN: ;
return 0;
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
end

:
var x = (5 + ((2 / -2) * +2));

:
while
  (x > 0)
do
  x = f(x, (x + 1));
end

:
x = input();

:
return 0;

END

LINE: 28
TOKEN: end
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
  var x = (5 + ((2 / -2) * +2));
  while
    (x > 0)
  do
    x = f(x, (x + 1));
  end
  x = input();
  return 0;
end

END

LINE: 30
TOKEN: main
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
  var x = (5 + ((2 / -2) * +2));
  while
    (x > 0)
  do
    x = f(x, (x + 1));
  end
  x = input();
  return 0;
end

:
main
END

LINE: 30
TOKEN: (
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
  var x = (5 + ((2 / -2) * +2));
  while
    (x > 0)
  do
    x = f(x, (x + 1));
  end
  x = input();
  return 0;
end

:
main()
END

LINE: 30
TOKEN: )
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
  var x = (5 + ((2 / -2) * +2));
  while
    (x > 0)
  do
    x = f(x, (x + 1));
  end
  x = input();
  return 0;
end

:
main()
END

LINE: 30
TOKEN: ;
DEFSTATE: 0
STACK:
:

:
var b = 6;

:
fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

:
fun main() =
  var x = (5 + ((2 / -2) * +2));
  while
    (x > 0)
  do
    x = f(x, (x + 1));
  end
  x = input();
  return 0;
end

:
main();

END

LINE: 32
TOKEN: 
DEFSTATE: 0
STACK:
>
var b = 6;

fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

fun main() =
  var x = (5 + ((2 / -2) * +2));
  while
    (x > 0)
  do
    x = f(x, (x + 1));
  end
  x = input();
  return 0;
end

main();


END

var b = 6;

fun f(x, y) =
  var a = ((x + ((y * 2) / 3)) - 1);
  print(a);
  if
    ((x > 4) && !((~x <= 4) || (b < 3)))
  then
    return (a * a);
  elif
    1
  then
    return (y & (2 << (1 + x)));
  else
    return (y - 1);
  end
end

fun main() =
  var x = (5 + ((2 / -2) * +2));
  while
    (x > 0)
  do
    x = f(x, (x + 1));
  end
  x = input();
  return 0;
end

main();

